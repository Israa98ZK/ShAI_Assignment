# -*- coding: utf-8 -*-
"""IsraaZkert_assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wELFBilskLDQIlvCAk2_ZyWsrn-upirC
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load your dataset
df = pd.read_csv('/content/Salaries.csv')
df.head()

df.columns

"""**Task1 : Basic Data Exploration**"""

num_rows, num_columns = df.shape
print(f"Number of Rows: {num_rows}")
print(f"Number of Columns: {num_columns}")

column_data_types = df.dtypes
print("Data Types of Each Column:")
print(column_data_types)

missing_values = df.isnull().sum()
print("Missing Values in Each Column:")
print(missing_values)

"""**Task2:Descriptive Statistics**

Calculate mean
"""

mean_salary = df['TotalPay'].mean()
print("Mean",mean_salary)

"""Calculate meadian"""

median_salary = df['TotalPay'].median()
print("Median",median_salary)

"""Calculate mode"""

mode_salary = df['TotalPay'].mode()
print("Mode",mode_salary)

"""Calculate minimum, and maximum salary"""

min_salary = df['TotalPay'].min()
max_salary = df['TotalPay'].max()
print("Min",min_salary)
print("Max",max_salary)

""" Calculate the range of salaries"""

salary_range = max_salary - min_salary
print("Salary Range",salary_range)

"""Calculate the standard deviation"""

std_dev_salary = df['TotalPay'].std()
print("standard deviation",std_dev_salary)

"""**Task3:Data Cleaning**

تم استخدام طريقة حساب المتوسط الحسابي لكل عمود عددي و وضعه بدلاً من القيم الفارغة بسبب طبيعة البيانات لدينا عدة أعمدة عددية
"""

df_cleaned = df.fillna(df.mean())

"""**Task4:Basic Data Visualization**"""

sns.set(style="whitegrid")

plt.figure(figsize=(10, 6))
sns.histplot(df['TotalPay'], bins=20, kde=True, color='skyblue')
plt.title('Salary Distribution')
plt.xlabel('Salary')
plt.ylabel('Frequency')
plt.show()

"""**Task5:Grouped Analysis**"""

grouped_data = df.groupby('EmployeeName')['TotalPay'].agg(['count', 'mean', 'median', 'min', 'max', 'std']).reset_index()

print("Summary Statistics by EmployeeName:")
print(grouped_data)

"""**Task6:Simple Correlation Analysis**"""

correlation_matrix = df[['TotalPay', 'Year']].corr()
print("Correlation Matrix:")
print(correlation_matrix)

plt.figure(figsize=(8, 6))
sns.scatterplot(x='Year', y='TotalPay', data=df, color='blue')
plt.title('Scatter Plot of Salary and Years')
plt.xlabel('Year')
plt.ylabel('Salary')
plt.show()